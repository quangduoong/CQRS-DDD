version: '3.4'

networks:
  backend:

services:
  eshop.api:
    container_name: eshop-product-service
    image: quangduoong/eshop-product-service
    build:
      context: .
      dockerfile: eShop/src/eShop.Api/Dockerfile
    ports:
      - 5000:80
      - 5001:443
    environment: 
      - DB_HOST=eshop-product-service-db 
      - DB_PORT=3306
      - DB_NAME=eshop
      - DB_ROOT_PASSWORD=mysql_pa55w0rd! 
      - REDIS_CACHEDB_HOST=redis-cache-db
      - REDIS_CACHEDB_PORT=6379
    networks: 
      - backend
    depends_on: 
      eshop-product-service-db:
        condition: service_healthy
      redis-cache-db:
        condition: service_healthy

  eshop-product-service-db:
    container_name: eshop-product-service-db
    image: mysql:8.0.33 
    environment:
      MYSQL_ROOT_PASSWORD: mysql_pa55w0rd!
    ports:
      - 18001:3306
    volumes:
      - ./.containers/database/eshop:/var/lib/mysql  
    networks: 
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eshop-product-service-db:3306"]
      interval: 30s 
      timeout: 10s 
      retries: 5

  redis-cache-db: 
    container_name: redis-cache-db
    image: redis:7.2-rc3-alpine 
    ports:
      - 6379:6379 
    networks: 
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s 
      timeout: 10s 
      retries: 5